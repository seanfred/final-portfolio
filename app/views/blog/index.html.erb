<article id="blog" class="on">

      <div class="container">
        <div class="sixteen columns">
          <h1>Blog</h1>
        </div>
        <div class="sixteen columns">
          <div class="sep"></div>
        </div>
      </div>
      <div class="blog-wrap">
        <div class="container">
          <div class="eight columns">
            <img src="https://s3.amazonaws.com/seanfred/pics/rails+best+practices.jpg" alt="Rails Best Practices"/>
          </div>
          <div class="eight columns">
            <div class="blog-date"><span>11.1.</span></div>
            <h6>Rails Best Practices</h6>
            <p>There are many conventions that the Rails community decides should be used as best practices for development and production when building applications. The main practices include using a source control such as Github to keep track of all your changes during development. They also recommend using some kind of project management software such as Sprintly or Pivotal. When editing code it is a good idea to use a sophisticated text editor when making changes to your application. One of the more important practices in your development is following a Behavior Driven Testing Development protocol. This allows you to write tests for what you expect the user to do and then code for those expectations. Finally, it is also important to set up a continuous integration service that checks to see that all your code is passing and you have a working application.</p>

            <p>Github is the standard for version control when creating applications. It allows you to start with an empty git project and every time you add something to it, it records the changes and adds them for public viewing so you can see all the changes that were made step to step. Github also allows you to clone an entire repository and download it to your local machine for inspecting code on a text editor. When you have made a change in your repository, all you need to do is add those modified files to the repo and send a commit message explaining what changes you have made.A simple push deploys these new changes directly to Github for public viewing. This is a great version control program and is a necessity for all professional developers.</p>

            <p>There are many project management tools for developers today, but the two main ones include Sprintly and Pivotal. Both are easy to use and allow you to add a project and split it up into individual assignments for specific team members. This makes it so everyone is on the same page and knows exactly which tasks they need to complete. This greatly increases productivity in a team environment. You are able to separate tasks into three places which include a backlog, current, and a complete section. This makes it very easy to see what has been done, what needs to be, and what is on the back burner for another day. This lets the team focus on what must be implemented now and what can be implemented later on future releases.</p>

            <p>A text editor is definitely something you’re going to want to have when you start to dig deeper into your application’s code. A favorite of most developers is Sublime. Everything is customizable from text highlighting to shortcut keys. Another one that is widely used is a program called Textmate. This one is not quite as customizable and user friendly as Sublime, but it is another option for developers.</p>

            <p>Behavior driven development is a major part of rails best practices. The two most common testing tools are Minispec and Rspec. This keeps your code flowing smoothly and by testing what you expect to happen, you’re tests should tell you whether or not those events are actually taking place. Using BDD on your code ensures quality code and that it will not break down later in the development cycle.</p>

            <p>Adding continuous integration into your code will ensure that you know exactly when your code is passing or failing. The main program rails developers use is Travis-CI. It shows a build passing or failing on your Github repository and every time you push up a new commit, it automatically runs its tests and lets you know if you have failures or errors in testing. This is a major attribute to clean quality code especially if you are going to clone someone else’s repo, you know that it is up to date and free of errors.</p>

            <p>These best practices will ensure that your code meets professional standards in the rails community. It will also make it easier for others to examine your code and understand it. These practices are essential for making it easier to find and fix errors in your code during the development cycle. Using these best practices will distinguish you as a professional in the rails community and will also help you develop clean and reliable code.</p>
          </div>
        </div>
      </div>

    <div class="footer">
        <div class="container">
          <div class="sixteen columns">
            <a href="javascript:goTo('home');"><img src="https://s3.amazonaws.com/seanfred/pics/SEAN_FREDERICK_1+(1).png" alt=""/></a>
          </div>
          <div class="sixteen columns">
            <p>© 2013 Sean Frederick</p>
          </div>
          <div class="sixteen columns">
            <div class="social-bottom">
              <ul class="bottom-social">
                <li class="icon-bottom"><a href="https://twitter.com/SeanFrederick7" target="_blank">&#xf099;</a></li>
                <li class="icon-bottom"><a href="https://linkedin.com/in/seanfred/" target="_blank">&#xf0e1;</a></li>
                <li class="icon-bottom"><a href="https://github.com/seanfred?tab=repositories" target="_blank">&#xf09b;</a></li>
                <li class="icon-bottom"><a href="https://plus.google.com/u/0/110208847982226163285/about/p/pub" target="_blank">&#xf0d5;</a></li>
              </ul>
            </div>
          </div>
        </div>
      </div>

    </article>
